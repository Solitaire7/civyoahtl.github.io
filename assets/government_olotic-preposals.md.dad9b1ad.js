import{_ as e,c as o,o as a,a as s}from"./app.02c63fc1.js";const u=JSON.parse('{"title":"Olotic Preposals","description":"","frontmatter":{},"headers":[{"level":2,"title":"Proposal One (Passed)","slug":"proposal-one-passed","link":"#proposal-one-passed","children":[]}],"relativePath":"government/olotic-preposals.md","lastUpdated":1662765217000}'),t={name:"government/olotic-preposals.md"},n=s('<h1 id="olotic-preposals" tabindex="-1">Olotic Preposals <a class="header-anchor" href="#olotic-preposals" aria-hidden="true">#</a></h1><p><em>(Proposals that failed or were withdrawn are hidden by spoiler text; Proposals that passed but have been superceded are crossed out.)</em></p><nav class="table-of-contents"><ul><li><a href="#proposal-one-passed">Proposal One (Passed)</a></li></ul></nav><h2 id="proposal-one-passed" tabindex="-1">Proposal One (Passed) <a class="header-anchor" href="#proposal-one-passed" aria-hidden="true">#</a></h2><p>Proposer: bgbba, Seconded By: Spacevolcano, Date: 22nd July 2019</p><blockquote><p>The current system of proposals is a total shitshow, and after seven months of ineffectiveness last week things came to a head. I think we can all recognize that the system is broken as it is, so I&#39;m taking Orinnari&#39;s suggestion and giving it a little structure, as the Chieftain. The way that proposals, charter changes, and the like will be handled from now on is this:</p><ul><li>Somebody makes a proposal.</li><li>Another person says &#39;seconded&#39; and others can echo this.</li><li>This opens a 48 hour period to vote on the proposal.</li><li>If the proposal passes the citizenry, the Council needs to look at it and either accept it and implement that agenda or they need to reject it and offer valid reasoning.</li></ul><p>At the end of the proposal cycle, this channel will be cleared and its contents recorded for posterity so that it&#39;s not bogged down.</p></blockquote><p><strong>Proposal passed</strong>: Votes unknown.</p><p><em>(Amends <a href="/constitution/charter.html">The Yoahtlan Charter</a>)</em></p>',8),r=[n];function l(i,p,d,h,c,_){return a(),o("div",null,r)}const f=e(t,[["render",l]]);export{u as __pageData,f as default};
